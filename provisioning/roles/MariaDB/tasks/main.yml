- name: Setup yum repo for Galera Cluster 
  yum_repository:
    name: MariaDB # required. Unique repository ID. This option builds the section name of the repository in the repo file.,This parameter is only required if I(state) is set to C(present) or C(absent).
    enabled: yes # not required. This tells yum whether or not use this repository.
    repo_gpgcheck: yes # not required. This tells yum whether or not it should perform a GPG signature check on the repodata from this repository.
    gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB # not required. A URL pointing to the ASCII-armored GPG key file for the repository.,It can also be a list of multiple URLs.
    gpgcheck: yes #lls yum whether o not required. Ter not it should perform a GPG signature check on packages.
    baseurl: http://yum.mariadb.org/10.4/centos7-amd64 # not required. URL to the directory where the yum repository's 'repodata' directory lives.,It can also be a list of multiple URLs.,This, the I(metalink) or I(mirrorlist) parameters are required if I(state) is set to C(present).
    description: MariDB galera repo

- name: Install MariaDB packages
  package:
    state: present # required. Whether to install (C(present)), or remove (C(absent)) a package. Other states depend on the underlying package module, i.e C(latest).
    name: "{{ item }}"  # required. Package name, or package specifier with version, like C(name-1.0).,Be aware that packages are not always named the same and this module will not 'translate' them per distro.
  loop: "{{ packages }}"  

- name: Configure selinux for mysql 
  selinux_permissive:
      domain: mysqld_t # required. the domain that will be added or removed from the list of permissive domains
      permissive: true # required. indicate if the domain should or should not be set as permissive

- name: Copy Mysql Config file
  copy:
    dest: /etc/my.cnf.d/server.cnf # required. Remote absolute path where the file should be copied to. If I(src) is a directory, this must be a directory too. If I(dest) is a nonexistent path and if either I(dest) ends with "/" or I(src) is a directory, I(dest) is created. If I(src) and I(dest) are files, the parent directory of I(dest) isn't created: the task fails if it doesn't already exist.
    src: "{{ role_path }}/files/my.cnf" # not required. Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with "/", only inside contents of that directory are copied to destination. Otherwise, if it does not end with "/", the directory itself with all contents is copied. This behavior is similar to Rsync.
    force: yes # not required. the default is C(yes), which will replace the remote file when contents are different than the source. If C(no), the file will only be transferred if the destination does not exist.
    mode: '0644'
